name: Build

on:
  push:
    branches:
      - master
      - branch-*
      - dogfood-*
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "30 1 * * *" # Run daily at 1:30 AM UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: Build
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access and tagging
    outputs:
      build-number: ${{ steps.build-gradle.outputs.BUILD_NUMBER }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - uses: SonarSource/ci-github-actions/build-gradle@v1
        id: build-gradle
        with:
          deploy-pull-request: true
          artifactory-reader-role: private-reader    # Override for public repo using private access
          artifactory-deployer-role: qa-deployer     # Override for public repo using private access

  qa:
    needs: [build]
    runs-on: github-ubuntu-latest-s  # Public repository runner
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access
    strategy:
      fail-fast: false
      matrix:
        # Plugin tests check API compatibility, so they should run against all supported versions.
        # Ruling tests check only that the results of analysis have not changed,
        # so one sonar.runtimeVersion is enough.
        item:
          - { suite: "plugin", sq_version: "DEV", submodules: false}
          - { suite: "plugin", sq_version: "LATEST_RELEASE", submodules: false}
          - { suite: "ruling", sq_version: "LATEST_RELEASE", submodules: true}
    name: "QA Tests [${{ matrix.item.suite }}] - SQ : ${{ matrix.item.sq_version }}"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: ${{ matrix.item.submodules }}
      - name: Remove kotlin ITs as they are not relevant for ruling tests (and cause issues with wrapper validation)
        if: ${{ matrix.item.submodules }}
        run: rm -r ./its/sources/kotlin
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          cache_save: false
          version: 2025.7.12
      - name: Get GitHub Token for QA Licenses
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/github/token/licenses-ro token | GITHUB_TOKEN;
      - name: Configure Gradle
        uses: SonarSource/ci-github-actions/config-gradle@v1
        with:
          artifactory-reader-role: private-reader    # Override for public repo using private access
      - name: Run QA Tests
        env:
          GITHUB_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).GITHUB_TOKEN }}
          SUITE: ${{ matrix.item.suite }}
          SQ_VERSION: ${{ matrix.item.sq_version }}
        run: |
          ./gradlew ":its:${SUITE}:test" --project-prop ${SUITE} \
            "-Dsonar.runtimeVersion=${SQ_VERSION}" \
            "-Dorchestrator.artifactory.accessToken=${ARTIFACTORY_ACCESS_TOKEN}" \
            "-DbuildNumber=${BUILD_NUMBER}" \
            --info --stacktrace --console plain --no-daemon --build-cache
  promote:
    needs: [build, qa]
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: Promote
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access and tagging
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          cache_save: false
          version: 2025.7.12
      - uses: SonarSource/ci-github-actions/promote@v1
        with:
          promote-pull-request: true  # Enable PR artifact promotion
